{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/_services/paginationHelpers.ts","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/_resolvers/member-detailed.resolvers.ts","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css']\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = 'https://localhost:5001/api/';\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get404Error(){\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400Error(){\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get500Error(){\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get401Error(){\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n\r\n  get400ValidationError(){\r\n    this.http.post(this.baseUrl + 'account/register',{}).subscribe(response => {\r\n      console.log(response);\r\n    }, error => {\r\n      console.log(error);\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">\r\n        Test 500\r\n    </button>\r\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">\r\n        Test 400\r\n    </button>\r\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">\r\n        Test 401\r\n    </button>\r\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">\r\n        Test 404\r\n    </button>\r\n    <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">\r\n        Test 400 validation\r\n    </button>\r\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length > 0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{ error }}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</ng-container>","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.css']\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() maxDate: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY'\r\n    }\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n  }\r\n  registerOnChange(fn: any): void {\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n  \r\n}\r\n","<div class=\"form-group\">\r\n  <input\r\n    type=\"text\"\r\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n    class=\"form-control\"\r\n    [formControl]='ngControl.control'\r\n    placeholder=\"{{label}}\"\r\n    bsDatepicker\r\n    [bsConfig]='bsConfig'\r\n    [maxDate]='maxDate'\r\n  />\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css'],\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(\r\n    private accontService: AccountService,\r\n    private toastr: ToastrService,\r\n    private fb: FormBuilder,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.initializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() - 18);\r\n  }\r\n\r\n  initializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: [\r\n        '',\r\n        [Validators.required, Validators.minLength(4), Validators.maxLength(8)],\r\n      ],\r\n      confirmPassword: [\r\n        '',\r\n        [Validators.required, this.matchValues('password')],\r\n      ],\r\n    });\r\n  }\r\n\r\n  matchValues(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n        ? null\r\n        : { isMatching: true };\r\n    };\r\n  }\r\n\r\n  register() {\r\n    this.accontService.register(this.registerForm.value).subscribe(\r\n      (response) => {\r\n        this.router.navigateByUrl('/members');\r\n        this.cancel();\r\n      },\r\n      (error) => {\r\n        this.validationErrors = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\r\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\r\n  <hr />\r\n  <div class=\"form-group\">\r\n    <label for=\"\" class=\"control-label\" style=\"margin-right: 25px;\">\r\n      I am: \r\n    </label>\r\n    <label for=\"\" class=\"radio-inline\">\r\n      <input type=\"radio\" value=\"male\" formControlName='gender'> Male\r\n    </label>\r\n    <label for=\"\" class=\"radio-inline\">\r\n      <input type=\"radio\" value=\"female\" class=\"ml-4\" formControlName='gender'> Female\r\n    </label>\r\n  </div>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['username']\"\r\n    [label]=\"'Username'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['knownAs']\"\r\n    [label]=\"'Known As'\"\r\n  ></app-text-input>\r\n  <app-date-input\r\n    [formControl]=\"registerForm.controls['dateOfBirth']\"\r\n    [label]=\"'Date of Birth'\"\r\n    [maxDate]='maxDate'\r\n  ></app-date-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['city']\"\r\n    [label]=\"'City'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['country']\"\r\n    [label]=\"'Country'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['password']\"\r\n    [label]=\"'Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n  <app-text-input\r\n    [formControl]=\"registerForm.controls['confirmPassword']\"\r\n    [label]=\"'Confirm Password'\"\r\n    [type]=\"'password'\"\r\n  ></app-text-input>\r\n\r\n  <div class=\"row \" *ngIf=\"validationErrors.length > 0\">\r\n    <ul class=\"text-danger\">\r\n        <li *ngFor=\"let error of validationErrors\">\r\n            {{ error }}\r\n        </li>\r\n    </ul>\r\n</div>\r\n\r\n  <div class=\"form-group text-center\">\r\n    <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\r\n    <button class=\"btn btn-default mr-2\" type=\"button\" (click)=\"cancel()\">\r\n      Cancel\r\n    </button>\r\n  </div>\r\n</form>\r\n\r\n\r\n","import { ChangeDetectionStrategy, ViewChild } from '@angular/core';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css'],\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n  @ViewChild('messageForm') messageForm: NgForm;\r\n  @Input() messages: Message[] = [];\r\n  @Input() username: string;\r\n  messageContent: string;\r\n  loading = false;\r\n\r\n  constructor(public messageService: MessageService) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  sendMessage() {\r\n    this.loading = true;\r\n    this.messageService\r\n      .sendMessage(this.username, this.messageContent)\r\n      .then(() => {\r\n        this.messageForm.reset();\r\n      }).finally(() => this.loading = false);\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <div\r\n    class=\"card-body\"\r\n    #scrollMe\r\n    style=\"overflow: scroll; height: 535px\"\r\n    [scrollTop]=\"scrollMe.scrollHeight\"\r\n  >\r\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n      No messages yet... say hi by using the message box below\r\n    </div>\r\n\r\n    <ul *ngIf=\"(messageService.messageThread$ | async)?.length\" class=\"chat\">\r\n      <li *ngFor=\"let message of messageService.messageThread$ | async\">\r\n        <div>\r\n          <span class=\"chat-img float-right\">\r\n            <img\r\n              src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\r\n              class=\"rounded-circle\"\r\n              alt=\"{{ message.senderUsername }}\"\r\n            />\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-o\">{{\r\n                  message.messageSent | timeago\r\n                }}</span>\r\n                <span\r\n                  class=\"text-danger\"\r\n                  *ngIf=\"\r\n                    !message.dateRead && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (unread)\r\n                </span>\r\n                <span\r\n                  class=\"text-success\"\r\n                  *ngIf=\"\r\n                    message.dateRead && message.senderUsername !== username\r\n                  \"\r\n                >\r\n                  (read {{ message.dateRead | timeago }})\r\n                </span>\r\n              </small>\r\n            </div>\r\n            <p>{{ message.content }}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n    <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\" autocomplete=\"off\">\r\n      <div class=\"input-group\">\r\n        <input\r\n          name=\"messageContent\"\r\n          required\r\n          [(ngModel)]=\"messageContent\"\r\n          type=\"text\"\r\n          class=\"form-control input-sm\"\r\n          placeholder=\"Send a private message\"\r\n        />\r\n        <div class=\"input-group-append\">\r\n          <button\r\n            [disabled]=\"!messageForm.valid || loading\"\r\n            class=\"btn btn-primary\"\r\n            type=\"submit\"\r\n          >\r\n           <i *ngIf=\"loading\" class=\"fa fa-spinner fa-spin\"></i> Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Photo } from '../../_models/photo';\r\nimport { AdminService } from '../../_services/admin.service';\r\nimport { ConfirmService } from '../../_services/confirm.service';\r\n\r\n@Component({\r\n  selector: 'app-photo-management',\r\n  templateUrl: './photo-management.component.html',\r\n  styleUrls: ['./photo-management.component.css'],\r\n})\r\nexport class PhotoManagementComponent implements OnInit {\r\n  photos: Partial<Photo[]>;\r\n  constructor(\r\n    private adminService: AdminService,\r\n    private confirmService: ConfirmService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getPhotosForApproval();\r\n  }\r\n\r\n  getPhotosForApproval() {\r\n    this.adminService.getPhotoForApproval().subscribe((photos) => {\r\n      this.photos = photos;\r\n    });\r\n  }\r\n\r\n  aprovePhoto(photoid: number) {\r\n    this.confirmService\r\n      .confirm('Confirm aproval of this photo', 'This cannot be undone')\r\n      .subscribe((result) => {\r\n        if (result) {\r\n          this.adminService.approvePhoto(photoid).subscribe(() => {\r\n            this.photos.splice(\r\n              this.photos.findIndex((p) => p.id === photoid),\r\n              1\r\n            );\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  rejectPhoto(photoid: number) {\r\n    this.confirmService\r\n      .confirm('Confirm rejection of this photo', 'This cannot be undone')\r\n      .subscribe((result) => {\r\n        if (result) {\r\n          this.adminService.rejectPhoto(photoid).subscribe(() => {\r\n            this.photos.splice(\r\n              this.photos.findIndex((p) => p.id === photoid),\r\n              1\r\n            );\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <table class=\"table\">\r\n        <th>Username</th>\r\n        <th>Photo</th>\r\n        <th>Actions</th>\r\n        <tr *ngFor=\"let photo of photos\">\r\n            <td>{{photo.username}}</td>\r\n            <td><img src=\"{{photo.url}}\" style=\"width: 150px;\" ></td>\r\n            <td>\r\n                <button (click)=\"$event.stopPropagation()\" (click)=\"aprovePhoto(photo.id)\" class=\"btn btn-success\">Approve</button>\r\n                <button (click)=\"$event.stopPropagation()\" (click)=\"rejectPhoto(photo.id)\" class=\"btn btn-danger\">Reject</button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>Not found</h1>\r\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { PresenceService } from './presence.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private presence: PresenceService) {}\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\r\n      map((user: User) => {\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user ');\r\n    this.currentUserSource.next(null);\r\n    this.presence.stopHubConnection();\r\n  }\r\n\r\n  getDecodedToken(token) {\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n  error: any;\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.error = navigation?.extras?.state?.error;\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h4>\r\n  Internal server error - refreshing the page will make the error disappear\r\n</h4>\r\n<ng-container *ngIf=\"error\">\r\n  <h5 class=\"text-danger\">Error: {{error.message}}</h5>\r\n  <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is problably not to blame.</p>\r\n  <p>What to do next?</p>\r\n  <ol>\r\n      <li>Open the chrome dev tools</li>\r\n      <li>Inspect network tab</li>\r\n      <li>Check the failing request</li>\r\n      <li>Examine the request URL - make sure it is correct</li>\r\n      <li>Reproce de error in Postman - if we see the same reponse, then the issue is not with Angular</li>\r\n  </ol>\r\n  <p>Following is the stack trace - this is where your invetigation should start!</p>\r\n  <code class=\"mt-5\" style=\"background-color: whitesmoke;\">\r\n    {{error.details}}\r\n</code>\r\n</ng-container>\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Directive({\r\n  selector: '[appHasRole]',\r\n})\r\nexport class HasRoleDirective implements OnInit {\r\n  @Input() appHasRole: string[];\r\n  user: User;\r\n\r\n  constructor(\r\n    private viewContainerRef: ViewContainerRef,\r\n    private templateRef: TemplateRef<any>,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\r\n      this.user = user;\r\n    })\r\n  }\r\n  ngOnInit(): void {\r\n    //clear the view if no roles\r\n    if(!this.user?.roles || this.user == null) {\r\n      this.viewContainerRef.clear();\r\n      return;\r\n    }\r\n    \r\n    if(this.user?.roles.some(r => this.appHasRole.includes(r))){\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    }else{\r\n      this.viewContainerRef.clear();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusyService {\r\n  busyRequestCount = 0;\r\n\r\n  constructor(private spinnerservice: NgxSpinnerService) { }\r\n\r\n  busy(){\r\n    this.busyRequestCount++;\r\n    this.spinnerservice.show(undefined,{\r\n      type: 'line-scale-party',\r\n      bdColor: 'rgba(255,255,255,0)',\r\n      color: '#333333'\r\n    })\r\n  }\r\n\r\n  idle(){\r\n    this.busyRequestCount--;\r\n    if(this.busyRequestCount <= 0) {\r\n      this.busyRequestCount = 0;\r\n      this.spinnerservice.hide();\r\n    }\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  registerToggle(){\r\n    this.registerMode = !this.registerMode;\r\n  }\r\n\r\n  cancelRegisterMode(event: boolean){\r\n    this.registerMode = event;\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n  <div *ngIf=\"!registerMode\" style=\"text-align: center\">\r\n    <h1>Find yout match</h1>\r\n    <p class=\"lead\">\r\n      Come on in to view your matches.. all you need to do is sign up!\r\n    </p>\r\n    <div class=\"text-center\">\r\n      <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\r\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\r\n    </div>\r\n  </div>\r\n  <div *ngIf=\"registerMode\" class=\"container\">\r\n      <div class=\"row justify-content-center\">\r\n          <div class=\"col-4\">\r\n              <app-register  (cancelRegister)=\"cancelRegisterMode($event)\" ></app-register>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n","export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPageNumber: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    result: T;\r\n    pagination: Pagination;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/',\r\n  hubUrl: 'https://localhost:5001/hubs/',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let currentUser: User;\r\n\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\r\n    if(currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      }) \r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css'],\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n  messages: Message[];\r\n  pagination: Pagination;\r\n  container = 'Unread';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private confirmService: ConfirmService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    this.loading = true;\r\n    this.messageService\r\n      .getMessages(this.pageNumber, this.pageSize, this.container)\r\n      .subscribe((response) => {\r\n        this.messages = response.result;\r\n        this.pagination = response.pagination;\r\n        this.loading = false;\r\n      });\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.confirmService\r\n      .confirm('Confirm delete message', 'This cannot be undone')\r\n      .subscribe((result) => {\r\n        if (result) {\r\n          this.messageService.deleteMessage(id).subscribe(() => {\r\n            this.messages.splice(\r\n              this.messages.findIndex((m) => m.id === id),\r\n              1\r\n            );\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.pageNumber = event.page;\r\n    this.loadMessages();\r\n  }\r\n}\r\n","<div class=\"row mb-4\">\r\n  <div class=\"btn-group\" name=\"container\">\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      btnRadio=\"Unread\"\r\n      [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\"\r\n    >\r\n      <i class=\"fa fa-envelope\"></i> Unread\r\n    </button>\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      btnRadio=\"Inbox\"\r\n      [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\"\r\n    >\r\n      <i class=\"fa fa-envelope-open\"></i> Inbox\r\n    </button>\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      btnRadio=\"Outbox\"\r\n      [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\"\r\n    >\r\n      <i class=\"fa fa-paper-plane\"></i> Outbox\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\r\n  <h3>No messages</h3>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length > 0\">\r\n  <table class=\"table table-hover\" style=\"cursor: pointer\">\r\n    <tr>\r\n      <th style=\"width: 40%\">Message</th>\r\n      <th style=\"width: 20%\">From / To</th>\r\n      <th style=\"width: 20%\">Sent / Received</th>\r\n      <th style=\"width: 20%\"></th>\r\n    </tr>\r\n    <tr\r\n      [hidden]=\"loading\"\r\n      *ngFor=\"let message of messages\"\r\n      routerLink=\"{{\r\n        container === 'Outbox'\r\n          ? '/members/' + message.recepientUsername\r\n          : '/members/' + message.senderUsername\r\n      }}\"\r\n      [queryParams]=\"{ tab: 3 }\"\r\n    >\r\n      <td>{{ message.content }}</td>\r\n      <td>\r\n        <div *ngIf=\"container === 'Outbox'\">\r\n          <img\r\n            class=\"img-circle rounded-circle mr-2\"\r\n            src=\"{{ message.recipientPhotoUrl || './assets/user.png' }}\"\r\n            alt=\"{{ message.recepientUsername }}\"\r\n          />\r\n          <strong>{{ message.senderUsername | titlecase }}</strong>\r\n        </div>\r\n        <div *ngIf=\"container !== 'Outbox'\">\r\n            <img\r\n              class=\"img-circle rounded-circle mr-2\"\r\n              src=\"{{ message.senderPhotoUrl || './assets/user.png' }}\"\r\n              alt=\"{{ message.senderUsername }}\"\r\n            />\r\n            <strong>{{ message.senderUsername | titlecase }}</strong>\r\n          </div>\r\n      </td>\r\n      <td>{{message.messageSent | timeago}}</td>\r\n      <td>\r\n          <button (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\" class=\"btn btn-danger\">Delete</button>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\r\n    <pagination\r\n      [boundaryLinks]=\"true\"\r\n      [totalItems]=\"pagination.totalItems\"\r\n      [itemsPerPage]=\"pagination.itemsPerPage\"\r\n      [(ngModel)]=\"pagination.currentPage\"\r\n      (pageChanged)=\"pageChanged($event)\"\r\n      previousText=\"&lsaquo;\"\r\n      nextText=\"&rsaquo;\"\r\n      firstText=\"&laquo;\"\r\n      lastText=\"&raquo;\"\r\n    >\r\n    </pagination>\r\n  </div>\r\n  ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right'\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  exports: [\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule\r\n  ],\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { catchError, switchAll } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router, private toastr: ToastrService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError((error) => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modelStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modelStateErrors.push(error.error.errors[key]);\r\n                  }\r\n                }\r\n                throw modelStateErrors.flat();\r\n              } else if(typeof(error.error)==='object') {\r\n                this.toastr.error(error.statusText, error.status);\r\n              } else {\r\n                this.toastr.error(error.error, error.status);\r\n              }\r\n              break;\r\n            case 401:\r\n              this.toastr.error(error.statusText, error.status);\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {\r\n                state: { error: error.error },\r\n              };\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.log(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Toast, ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user => {\r\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\r\n          return true;\r\n        }\r\n        this.toastr.error('You cannot enter this area');\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { AnyARecord } from 'dns';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Photo } from '../_models/photo';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminService {\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsersWithRoles(): any {\r\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\r\n  }\r\n\r\n  updateUserRoles(username: string, roles: string[]): any {\r\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\r\n  }\r\n\r\n  getPhotoForApproval(){\r\n    return this.http.get<Partial<Photo[]>>(this.baseUrl + 'admin/photos-to-moderate', {});\r\n  }\r\n\r\n  approvePhoto(photoid: number): any{\r\n    return this.http.put(this.baseUrl + 'admin/aprove-photo/' + photoid, {});\r\n  }\r\n\r\n  rejectPhoto(photoid: number): any{\r\n    return this.http.put(this.baseUrl + 'admin/reject-photo/' + photoid, {});\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css'],\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: Partial<User[]>;\r\n  bsModalRef: BsModalRef;\r\n\r\n  constructor(\r\n    private adminService: AdminService,\r\n    private modalService: BsModalService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getUsersWithRoles();\r\n  }\r\n\r\n  getUsersWithRoles() {\r\n    this.adminService.getUsersWithRoles().subscribe((users) => {\r\n      this.users = users;\r\n    });\r\n  }\r\n\r\n  openRolesModal(user: User) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        user,\r\n        roles: this.getRolesArray(user),\r\n      },\r\n    }\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent,  config );\r\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\r\n      const rolesToUpdate = {\r\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\r\n      };\r\n      if(rolesToUpdate) {\r\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\r\n          user.roles = [...rolesToUpdate.roles]\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n    const avalalbleRoles: any[] = [\r\n      { name: 'Admin', value: 'Admin' },\r\n      { name: 'Moderator', value: 'Moderator' },\r\n      { name: 'Member', value: 'Member' },\r\n    ];\r\n\r\n    avalalbleRoles.forEach((role) => {\r\n      let isMatch = false;\r\n      for (const userRole of userRoles) {\r\n        if (role.name === userRole) {\r\n          isMatch = true;\r\n          role.checked = true;\r\n          roles.push(role);\r\n          break;\r\n        }\r\n      }\r\n      if(!isMatch) {\r\n        role.checked = false;\r\n        roles.push(role);\r\n      }\r\n    })\r\n\r\n    return roles;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <table class=\"table \">\r\n        <tr>\r\n            <th style=\"width: 30%;\">Username</th>\r\n            <th style=\"width: 40%;\">Active roles</th>\r\n            <th style=\"width: 30%;\"></th>\r\n        </tr>\r\n        <tr *ngFor=\"let user of users\">\r\n            <td>{{user.username}}</td>\r\n            <td>{{user.roles}}</td>\r\n            <td>\r\n                <button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Roles</button>\r\n            </td>\r\n        </tr>\r\n    </table>\r\n</div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {\r\n  NgxGalleryAnimation,\r\n  NgxGalleryImage,\r\n  NgxGalleryOptions,\r\n} from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { User } from '../../_models/user';\r\nimport { AccountService } from '../../_services/account.service';\r\nimport { PresenceService } from '../../_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css'],\r\n})\r\nexport class MemberDetailComponent implements OnInit, OnDestroy {\r\n  @ViewChild('memberTabs', {static: true}) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab: TabDirective;\r\n  messages: Message[] = [];\r\n  user: User;\r\n\r\n  constructor(\r\n    public presence: PresenceService,\r\n    private route: ActivatedRoute,\r\n    private messageService: MessageService,\r\n    private accountService: AccountService,\r\n    private router: Router\r\n  ) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n    this.router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n  }\r\n \r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data => {\r\n      this.member = data.member;\r\n    })\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\r\n    })\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false,\r\n      },\r\n    ];\r\n\r\n    this.galleryImages = this.getImages();\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos) {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url,\r\n      });\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  selectTab(tabId: number): void {\r\n    this.memberTabs.tabs[tabId].active = true;\r\n  }\r\n\r\n  onTabActivated(data: TabDirective): void {\r\n    this.activeTab = data;\r\n    if (this.activeTab.heading === 'Messages' && this.messages.length === 0) {\r\n      this.messageService.createHubConnection(this.user, this.member.username);\r\n    } else {\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n\r\n  loadMessages(): void {\r\n    this.messageService\r\n      .getMessageThread(this.member.username)\r\n      .subscribe((messages) => {\r\n        this.messages = messages;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <img\r\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n        alt=\"{{ member.knownAs }}\"\r\n        class=\"card-img-top img-thumbnail\"\r\n      />\r\n      <div class=\"card-body\">\r\n        <div\r\n          class=\"mb-2\"\r\n          *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\"\r\n        >\r\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\r\n        </div>\r\n        <div>\r\n          <strong>Location:</strong>\r\n          <p>{{ member.city }}, {{ member.country }}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Age:</strong>\r\n          <p>{{ member.age }}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Last active:</strong>\r\n          <p>{{ member.lastActive | timeago }}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Member since:</strong>\r\n          <p>{{ member.create | date: \"dd MMM yyyy\" }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <div class=\"btn-group d-flex\">\r\n          <button class=\"btn btn-primary\">Like</button>\r\n          <button (click)=\"selectTab(3)\" class=\"btn btn-success\">\r\n            Message\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-8\">\r\n    <tabset class=\"member-tabset\" #memberTabs>\r\n      <tab\r\n        heading=\"About {{ member.knownAs }}\"\r\n        (selectTab)=\"onTabActivated($event)\"\r\n      >\r\n        <h4>Description</h4>\r\n        <p>{{ member.introduction }}</p>\r\n        <h4>Looking for</h4>\r\n        <p>{{ member.lookingFor }}</p>\r\n      </tab>\r\n      <tab heading=\"Interests\" (selectTab)=\"onTabActivated($event)\">\r\n        <h4>Interests</h4>\r\n        <p>{{ member.interests }}</p>\r\n      </tab>\r\n      <tab heading=\"Photos\" (selectTab)=\"onTabActivated($event)\">\r\n        <ngx-gallery\r\n          [options]=\"galleryOptions\"\r\n          [images]=\"galleryImages\"\r\n          class=\"ngx-gallery\"\r\n          style=\"display: inline-block; margin-bottom: 20px\"\r\n        ></ngx-gallery>\r\n      </tab>\r\n      <tab heading=\"Messages\" (selectTab)=\"onTabActivated($event)\">\r\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n      </tab>\r\n    </tabset>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService) {}\r\n\r\n  canActivate(): Observable<boolean>{\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user => {\r\n        if (user) return true;\r\n        this.toastr.error(\"You shall not pass!\");\r\n      })\r\n    )\r\n  }\r\n  \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { BusyService } from './busy.service';\r\nimport { getPaginatedResult, getPaginationHeader } from './paginationHelpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, private busyService: BusyService) {}\r\n\r\n  createHubConnection(user: User, otherUser: string): void {\r\n    this.busyService.busy();\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user=' + otherUser, {\r\n        accessTokenFactory: () => user.token,\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection.start()\r\n    .catch((error) => console.log(error))\r\n    .finally(() => this.busyService.idle());\r\n\r\n    this.hubConnection.on('ReceiveMessageThread', (messages) => {\r\n      this.messageThreadSource.next(messages);\r\n    });\r\n\r\n    this.hubConnection.on('NewMessage', (message) => {\r\n      this.messageThread$.pipe(take(1)).subscribe((messages) => {\r\n        this.messageThreadSource.next([...messages, message]);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on('UpdatedGroup', (group: Group) => {\r\n      if (group.connections.some(x => x.username === otherUser)) {\r\n        this.messageThread$.pipe(take(1)).subscribe(messages => {\r\n          messages.forEach((message) => {\r\n            if (!message.dateRead) {\r\n              message.dateRead = new Date(Date.now());\r\n            }\r\n          });\r\n          this.messageThreadSource.next([...messages]);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  stopHubConnection(): void {\r\n    if (this.hubConnection) {\r\n      this.messageThreadSource.next([]);\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeader(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginatedResult<Message[]>(\r\n      this.baseUrl + 'messages',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(\r\n      this.baseUrl + 'messages/thread/' + username\r\n    );\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection\r\n      .invoke('SendMessage', {\r\n        recipientUsername: username,\r\n        content,\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n  members: Member[];\r\n  pagination: Pagination;\r\n  userParams: UserParams;\r\n  user: User;\r\n  genderList = [{ value: 'male', display: 'Males' }, { value: 'female', display: 'Females' }]\r\n\r\n  constructor(private memberService: MembersService) {\r\n    this.userParams = this.memberService.getUserParams();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMembers();\r\n  }\r\n\r\n  loadMembers() {\r\n    this.memberService.setUserParams(this.userParams);\r\n    //console.log(this.userParams);\r\n    this.memberService.getMembers(this.userParams).subscribe(response => {\r\n      this.members = response.result;\r\n      this.pagination = response.pagination;\r\n    })\r\n  }\r\n\r\n  resetFilters() {\r\n    this.userParams = this.memberService.resetUserParams();\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.userParams.pageNumber = event.page;\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>Your matches - {{ pagination?.totalItems }} found</h2>\r\n</div>\r\n\r\n<div class=\"contanier mt-3\">\r\n  <form\r\n    #form=\"ngForm\"\r\n    class=\"form-inline mb-3\"\r\n    (ngSubmit)=\"loadMembers()\"\r\n    autocomplete=\"off\"\r\n  >\r\n    <div class=\"form-group\">\r\n      <label>Age from:</label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ml-1\"\r\n        style=\"width: 70px\"\r\n        name=\"minAge\"\r\n        [(ngModel)]=\"userParams.minAge\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group px-2\">\r\n      <label>Age to:</label>\r\n      <input\r\n        type=\"number\"\r\n        class=\"form-control ml-1\"\r\n        style=\"width: 70px\"\r\n        name=\"maxAge\"\r\n        [(ngModel)]=\"userParams.maxAge\"\r\n      />\r\n    </div>\r\n    <div class=\"form-group px-2\">\r\n      <label>Show: </label>\r\n      <select\r\n        name=\"gender\"\r\n        style=\"width: 130px\"\r\n        [(ngModel)]=\"userParams.gender\"\r\n        class=\"form-control ml-1\"\r\n      >\r\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n          {{ gender.display }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <button class=\"btn-btn-primary ml-1\" type=\"submit\">Apply Filters</button>\r\n    <button (click)=\"resetFilters()\" class=\"btn-btn-info ml-1\" type=\"submit\">\r\n      Reset Filters\r\n    </button>\r\n    <div class=\"col\">\r\n      <div class=\"btn-group float-right\">\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"lastActive\"\r\n          [(ngModel)]=\"userParams.orderBy\"\r\n        >\r\n          Last Active\r\n        </button>\r\n\r\n        <button\r\n          type=\"button\"\r\n          class=\"btn btn-primary\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"create\"\r\n          [(ngModel)]=\"userParams.orderBy\"\r\n        >\r\n          Newst Members\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div *ngFor=\"let member of members\" class=\"col-2\">\r\n    <app-member-card [member]=\"member\"></app-member-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n    [boundaryLinks]=\"true\"\r\n    [totalItems]=\"pagination.totalItems\"\r\n    [itemsPerPage]=\"pagination.itemsPerPage\"\r\n    [(ngModel)]=\"pagination.currentPage\"\r\n    (pageChanged)=\"pageChanged($event)\"\r\n    previousText=\"&lsaquo;\"\r\n    nextText=\"&rsaquo;\"\r\n    firstText=\"&laquo;\"\r\n    lastText=\"&raquo;\"\r\n  >\r\n  </pagination>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from './_models/user';\r\nimport { AccountService } from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'The Dating app';\r\n  users: any;\r\n\r\n  constructor(private accountService: AccountService, private presence: PresenceService) {}\r\n\r\n  ngOnInit() {\r\n    this.setCurrentUser();\r\n  }\r\n\r\n  setCurrentUser() {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    if (user) {\r\n      this.accountService.setCurrentUser(user);\r\n      this.presence.createHubConnection(user);\r\n    }\r\n  }\r\n}\r\n","<ngx-spinner>\r\n    <h3>Loading...</h3>\r\n</ngx-spinner>\r\n<app-nav></app-nav>\r\n<div class=\"container\" style=\"margin-top: 100px;\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService: BusyService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      finalize(() => {\r\n        this.busyService.idle();\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { PaginatedResult } from '../_models/pagination';\r\n\r\nexport function getPaginatedResult<T>(url, params, http: HttpClient) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n  return http\r\n    .get<T>(url, { observe: 'response', params })\r\n    .pipe(\r\n      map((response) => {\r\n        paginatedResult.result = response.body;\r\n        if (response.headers.get('Pagination') !== null) {\r\n          paginatedResult.pagination = JSON.parse(\r\n            response.headers.get('Pagination')\r\n          );\r\n        }\r\n        return paginatedResult;\r\n      })\r\n    );\r\n}\r\n\r\nexport function getPaginationHeader(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n\r\n  return params;\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { User } from '../_models/user';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\nimport { getPaginatedResult, getPaginationHeader } from './paginationHelpers';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MembersService {\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache = new Map();\r\n  user: User;\r\n  userParams: UserParams;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private accountService: AccountService\r\n  ) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => {\r\n      this.user = user;\r\n      this.userParams = new UserParams(user);\r\n    });\r\n  }\r\n\r\n  getUserParams() {\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params) {\r\n    this.userParams = params;\r\n  }\r\n\r\n  resetUserParams() {\r\n    this.userParams = new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n    var response = this.memberCache.get(Object.values(userParams).join('-'));\r\n    if (response) {\r\n      return of(response);\r\n    }\r\n\r\n    //console.log(Object.values(userParams).join('-'));\r\n    let params = getPaginationHeader(\r\n      userParams.pageNumber,\r\n      userParams.pageSize\r\n    );\r\n    //console.log(userParams);\r\n    params = params.append('minAge', userParams.minAge.toString());\r\n    params = params.append('maxAge', userParams.maxAge.toString());\r\n    params = params.append('gender', userParams.gender);\r\n    params = params.append('orderBy', userParams.orderBy);\r\n\r\n    return getPaginatedResult<Member[]>(\r\n      this.baseUrl + 'users/',\r\n      params,\r\n      this.http\r\n    ).pipe(\r\n      map((response) => {\r\n        this.memberCache.set(Object.values(userParams).join('-'), response);\r\n        return response;\r\n      })\r\n    );\r\n  }\r\n\r\n  getMember(username: string) {\r\n    const member = [...this.memberCache.values()]\r\n      .reduce((arr, elem) => arr.concat(elem.result), [])\r\n      .find((member: Member) => member.username === username);\r\n    //console.log(member);\r\n    if (member) {\r\n      return of(member);\r\n    }\r\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        const index = this.members.indexOf(member);\r\n        this.members[index] = member;\r\n      })\r\n    );\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username: string) {\r\n    return this.http.post(this.baseUrl + 'likes/' + username, {});\r\n  }\r\n\r\n  getLikes(predicate: string, pageNumber, pageSize) {\r\n    let params = getPaginationHeader(pageNumber, pageSize);\r\n    params = params.append('predicate', predicate);\r\n    return getPaginatedResult<Partial<Member[]>>(\r\n      this.baseUrl + 'likes',\r\n      params,\r\n      this.http\r\n    );\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css'],\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropzoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService) {\r\n    this.accountService.currentUser$\r\n      .pipe(take(1))\r\n      .subscribe((user) => (this.user = user));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e: any) {\r\n    this.hasBaseDropzoneOver = e;\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024,\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile = (file) => {\r\n      file.withCredentials = false;\r\n    };\r\n\r\n    this.uploader.onSuccessItem = (item, response, status, headers) => {\r\n      if (response) {\r\n        const photo: Photo = JSON.parse(response);\r\n        this.member.photos.push(photo);\r\n        if(photo.isMain) {\r\n          this.user.photoUrl = photo.url;\r\n          this.member.photoUrl = photo.url;\r\n          this.accountService.setCurrentUser(this.user);\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  setMainPhoto(photo: Photo) {\r\n    this.memberService.setMainPhoto(photo.id).subscribe(() => {\r\n      this.user.photoUrl = photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl = photo.url;\r\n      this.member.photos.forEach(p => {\r\n        if(p.isMain) p.isMain = false;\r\n        if(p.id === photo.id) p.isMain = true;\r\n      })\r\n    })\r\n  }\r\n\r\n  deletePhoto(photoId: number){\r\n    this.memberService.deletePhoto(photoId).subscribe(() => {\r\n      this.member.photos = this.member.photos.filter(x => x.id  !== photoId);\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-2 photo\" *ngFor=\"let photo of member.photos\">\r\n    <img\r\n      src=\"{{ photo.url }}\"\r\n      alt=\"{{ photo.url }}\"\r\n      [ngClass]=\"photo.isApproved ? '' : 'wating-approval'\"\r\n      class=\"img-thumbnail p-1\"\r\n    />\r\n    <span class=\"wating-approval-text\" [ngClass]=\"photo.isApproved ? '' : 'show-text'\">awaiting approval</span>\r\n    <div class=\"text-center\">\r\n      <button\r\n        [disabled]=\"photo.isMain || !photo.isApproved\"\r\n        (click)=\"setMainPhoto(photo)\"\r\n        [ngClass]=\"photo.isMain ? 'btn-success active' : 'btn-outline-success'\"\r\n        class=\"btn btn-sm\"\r\n      >\r\n        Main\r\n      </button>\r\n      <button\r\n        [disabled]=\"photo.isMain\"\r\n        (click)=\"deletePhoto(photo.id)\"\r\n        class=\"btn btn-sm btn-danger\"\r\n      >\r\n        <i class=\"fa fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row mt-3\">\r\n  <div class=\"col-md-3\">\r\n    <h3>Add Photos</h3>\r\n\r\n    <div\r\n      ng2FileDrop\r\n      [ngClass]=\"{ 'nv-file-over': hasBaseDropzoneOver }\"\r\n      (fileOver)=\"fileOverBase($event)\"\r\n      [uploader]=\"uploader\"\r\n      class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\"\r\n    >\r\n      <i class=\"fa fa-upload fa-3x\"></i>\r\n      Drop photos here\r\n    </div>\r\n\r\n    Multiple\r\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple /><br />\r\n\r\n    Single\r\n    <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n  </div>\r\n\r\n  <div\r\n    class=\"col-md-9\"\r\n    style=\"margin-bottom: 40px\"\r\n    *ngIf=\"uploader?.queue?.length\"\r\n  >\r\n    <h3>Upload queue</h3>\r\n    <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th width=\"50%\">Name</th>\r\n          <th>Size</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let item of uploader.queue\">\r\n          <td>\r\n            <strong>{{ item?.file?.name }}</strong>\r\n          </td>\r\n          <td *ngIf=\"uploader.options.isHTML5\" nowrap>\r\n            {{ item?.file?.size / 1024 / 1024 | number: \".2\" }} MB\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div>\r\n      <div>\r\n        Queue progress:\r\n        <div class=\"progress\" style=\"\">\r\n          <div\r\n            class=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            [ngStyle]=\"{ width: uploader.progress + '%' }\"\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success btn-s\"\r\n        (click)=\"uploader.uploadAll()\"\r\n        [disabled]=\"!uploader.getNotUploadedItems().length\"\r\n      >\r\n        <span class=\"fa fa-upload\"></span> Upload all\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-warning btn-s\"\r\n        (click)=\"uploader.cancelAll()\"\r\n        [disabled]=\"!uploader.isUploading\"\r\n      >\r\n        <span class=\"fa fa-ban\"></span> Cancel all\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-danger btn-s\"\r\n        (click)=\"uploader.clearQueue()\"\r\n        [disabled]=\"!uploader.queue.length\"\r\n      >\r\n        <span class=\"fa fa-trash\"></span> Remove all\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css']\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type: 'text';\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n   }\r\n\r\n  writeValue(obj: any): void {   \r\n  }\r\n  registerOnChange(fn: any): void { \r\n  }\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input\r\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\r\n      type=\"{{type}}\"\r\n      class=\"form-control\"\r\n      [formControl]=\"ngControl.control\"\r\n      placeholder=\"{{label}}\"\r\n    />\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\r\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\r\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}} characters\r\n    </div>\r\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\r\n        {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}} characters\r\n    </div>\r\n    <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\r\n        Password do not match\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from '../_models/member';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css'],\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  members: Partial<Member[]>;\r\n  predicate = 'liked';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  pagination: Pagination;\r\n\r\n  constructor(private memberService: MembersService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadLikes();\r\n  }\r\n\r\n  loadLikes() {\r\n    this.memberService\r\n      .getLikes(this.predicate, this.pageNumber, this.pageSize)\r\n      .subscribe((response) => {\r\n        this.members = response.result;\r\n        this.pagination = response.pagination;\r\n      });\r\n  }\r\n\r\n  pageChanged(event: any){\r\n    this.pageNumber = event.page;\r\n    this.loadLikes();\r\n  }\r\n}\r\n","<div class=\"text-center m-3\">\r\n    <h2>{{predicate === 'liked' ? 'Members I like' : 'Members who like me'}}</h2>\r\n</div>\r\n<div class=\"container mt-3\">\r\n    <div class=\"row\">\r\n        <div class=\"btn-group\" name=\"predicate\">\r\n            <button class=\"btn btn-primary\" btnRadio=\"liked\"\r\n             [(ngModel)]=\"predicate\" (click)=\"loadLikes()\" >Members I like</button>\r\n             <button class=\"btn btn-primary\" btnRadio=\"likedBy\"\r\n             [(ngModel)]=\"predicate\" (click)=\"loadLikes()\" >Members who like me</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-3\">\r\n        <div class=\"col-2\" *ngFor=\"let member of members\">\r\n            <app-member-card [member]=\"member\"></app-member-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n    <pagination\r\n      [boundaryLinks]=\"true\"\r\n      [totalItems]=\"pagination.totalItems\"\r\n      [itemsPerPage]=\"pagination.itemsPerPage\"\r\n      [(ngModel)]=\"pagination.currentPage\"\r\n      (pageChanged)=\"pageChanged($event)\"\r\n      previousText=\"&lsaquo;\"\r\n      nextText=\"&rsaquo;\"\r\n      firstText=\"&laquo;\"\r\n      lastText=\"&raquo;\"\r\n    >\r\n    </pagination>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Route, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css'],\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {};\r\n\r\n  constructor(\r\n    public accountService: AccountService,\r\n    private router: Router,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login() {\r\n    this.accountService.login(this.model).subscribe(\r\n      (response) => {\r\n        this.router.navigateByUrl('/members');\r\n      }\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-primary\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink='/'>Dating App</a>\r\n\r\n    <ul class=\"navbar-nav mr-auto\" >\r\n      <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink='/members' routerLinkActive='active'>Matches </a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active'>Lists</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink='/messages' routerLinkActive='active'>Messages</a>\r\n        </li>\r\n        <li *appHasRole='[\"Admin\",\"Moderator\"]' class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink='/admin' routerLinkActive='active'>Admin</a>\r\n        </li>\r\n      </ng-container>  \r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink='/errors' routerLinkActive='active'>Errors</a>\r\n      </li>    \r\n    </ul>\r\n\r\n    <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\r\n      <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\r\n      <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\r\n      <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n        <a  class=\"dropdown-item\" routerLink='/member/edit'>Edit Profile</a>\r\n        <div class=\"dropdown-divider\"></div>\r\n        <a  class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\r\n      </div>\r\n    </div>\r\n\r\n    <form\r\n      #loginForm=\"ngForm\"\r\n      class=\"form-inline mt-2 mt-md-0\"\r\n      (ngSubmit)=\"login()\"\r\n      autocomplete=\"off\"\r\n      *ngIf=\"(accountService.currentUser$ | async) === null\"\r\n    >\r\n      <input\r\n        name=\"username\"\r\n        [(ngModel)]=\"model.username\"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n      />\r\n      <input\r\n        name=\"password\"\r\n        [(ngModel)]=\"model.password\"\r\n        class=\"form-control mr-sm-2\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n      />\r\n      <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">\r\n        Login\r\n      </button>\r\n    </form>\r\n    \r\n  </div>\r\n</nav>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { PresenceService } from '../../_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css'],\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n  @Input() member: Member;\r\n\r\n  constructor(private memberService: MembersService, private toastr: ToastrService, public presence: PresenceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addLike(member: Member){\r\n    this.memberService.addLike(member.username).subscribe(() => {\r\n      this.toastr.success('You have liked ' + member.knownAs);\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-4\">\r\n  <div class=\"card-img-wrapper\">\r\n    <img\r\n      src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n      alt=\"{{ member.knownAs }}\"\r\n      class=\"card-img-top\"\r\n    />\r\n    <ul class=\"list-inline member-icons animate text-center\">\r\n      <li class=\"list-inline-item\">\r\n        <button routerLink=\"/members/{{ member.username }}\" class=\"btn-primary\">\r\n          <i class=\"fa fa-user\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button (click)=\"addLike(member)\" class=\"btn-primary\">\r\n          <i class=\"fa fa-heart\"></i>\r\n        </button>\r\n      </li>\r\n      <li class=\"list-inline-item\">\r\n        <button\r\n          routerLink=\"/members/{{ member.username }}\"\r\n          [queryParams]=\"{ tab: 3 }\"\r\n          class=\"btn-primary\"\r\n        >\r\n          <i class=\"fa fa-envelope\"></i>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-body p-1\">\r\n    <h6 class=\"card-title text-center mb-1\">\r\n      <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n        <i class=\"fa fa-user mr-2\"></i>\r\n      </span>\r\n      \r\n      {{ member.knownAs }}, {{ member.age }}\r\n    </h6>\r\n    <p class=\"card-text text-muted text-center\">{{ member.city }}</p>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as signalR from '@microsoft/signalr';\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PresenceService {\n  hubUrl = environment.hubUrl;\n  private hubConnection: HubConnection;\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\n  onlineUsers$ = this.onlineUsersSource.asObservable();\n\n  constructor(private toastr: ToastrService, private router: Router) {}\n\n  createHubConnection(user: User): void {\n    this.hubConnection = new HubConnectionBuilder()\n      .withUrl(this.hubUrl + 'presence', {\n        accessTokenFactory: () => user.token,\n      })\n      .withAutomaticReconnect()\n      .build();\n\n    this.hubConnection.start().catch((error) => console.log(error));\n\n    this.hubConnection.on('UserIsOnline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([...usernames, username]);\n      });\n    });\n\n    this.hubConnection.on('UserIsOffline', (username) => {\n      this.onlineUsers$.pipe(take(1)).subscribe((usernames) => {\n        this.onlineUsersSource.next([\n          ...usernames.filter((x) => x !== username),\n        ]);\n      });\n    });\n\n    this.hubConnection.on('GetOnlineUsers', (usernames: string[]) => {\n      this.onlineUsersSource.next(usernames);\n    });\n\n    this.hubConnection.on('NewMessageReceived', ({ username, knownAs }) => {\n      this.toastr\n        .info(knownAs + ' has sent you a new message!')\n        .onTap.pipe(take(1))\n        .subscribe(() =>\n          this.router.navigateByUrl('/members/' + username + '?tab=3')\n        );\n    });\n  }\n\n  stopHubConnection() {\n    this.hubConnection.stop().catch((error) => console.log(error));\n  }\n}\n","import { User } from './user';\r\n\r\nexport class UserParams {\r\n    gender: string;\r\n    minAge = 18;\r\n    maxAge = 99;\r\n    pageNumber = 1;\r\n    pageSize = 5;\r\n    orderBy = 'lastActive';\r\n\r\n    constructor (user: User){\r\n        this.gender = user.gender === 'female' ? 'male' : 'female';\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-admin-panel',\r\n  templateUrl: './admin-panel.component.html',\r\n  styleUrls: ['./admin-panel.component.css']\r\n})\r\nexport class AdminPanelComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Admin Panel</h2>\r\n<div class=\"tab-panel\">\r\n    <tabset class=\"member-tabset\">\r\n        <tab heading='User management' *appHasRole='[\"Admin\"]'>\r\n            <div class=\"container\">\r\n                <app-user-management></app-user-management>\r\n            </div>\r\n        </tab>\r\n        <tab heading='Photo management' *appHasRole='[\"Admin\",\"Moderator\"]'>\r\n            <div class=\"container\">\r\n                <app-photo-management></app-photo-management>\r\n            </div>\r\n        </tab>\r\n    </tabset>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Member } from '../_models/member';\r\nimport { MembersService } from '../_services/members.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class MemberDetailedResolver implements Resolve<Member> {\r\n\r\n    constructor(private memberService: MembersService){}\r\n\r\n    resolve(route: ActivatedRouteSnapshot): Observable<Member> {\r\n        return this.memberService.getMember(route.paramMap.get('username'));\r\n    }\r\n\r\n}","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any){\r\n    if(this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private accountService: AccountService, private memberService: MembersService, private toastr: ToastrService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember(){\r\n    this.memberService.getMember(this.user.username).subscribe(member => {\r\n      this.member = member;\r\n    })\r\n  }\r\n\r\n  updateMember(){\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile update succesfuly!');\r\n      this.editForm.reset(this.member);\r\n    })   \r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n  <div class=\"col-4\">\r\n    <h1>Your profile</h1>\r\n  </div>\r\n  <div class=\"col-8\">\r\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n      <strong>Information: </strong> You have made changes. Any unsaved changes\r\n      will be lost\r\n    </div>\r\n  </div>\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <img\r\n        src=\"{{ member.photoUrl || './assets/user.png' }}\"\r\n        alt=\"{{ member.knownAs }}\"\r\n        class=\"card-img-top img-thumbnail\"\r\n      />\r\n      <div class=\"card-body\">\r\n        <div>\r\n          <strong>Location:</strong>\r\n          <p>{{ member.city }}, {{ member.country }}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Age:</strong>\r\n          <p>{{ member.age }}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Last active:</strong>\r\n          <p>{{ member.lastActive | timeago }}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Member since:</strong>\r\n          <p>{{ member.create | date: 'dd MMM yyyy' }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-success btn-block\">\r\n          Save Changes\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-8\">\r\n    <tabset class=\"member-tabset\">\r\n      <tab heading=\"About {{ member.knownAs }}\">\r\n        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\r\n          <h4>Description:</h4>\r\n          <textarea\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"member.introduction\"\r\n            name=\"introduction\"\r\n            rows=\"6\"\r\n          ></textarea>\r\n          <h4 class=\"mt-2\">Looking for:</h4>\r\n          <textarea\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"member.lookingFor\"\r\n            name=\"lookingFor\"\r\n            rows=\"6\"\r\n          ></textarea>\r\n          <h4 class=\"mt-2\">Interests:</h4>\r\n          <textarea\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"member.interests\"\r\n            name=\"interests\"\r\n            rows=\"6\"\r\n          ></textarea>\r\n          <h4 class=\"mt-2\">Location Details:</h4>\r\n          <div class=\"form-inline\">\r\n            <label for=\"city\">City:</label>\r\n            <input\r\n              [(ngModel)]=\"member.city\"\r\n              type=\"text\"\r\n              name=\"city\"\r\n              class=\"form-control mx-2\"\r\n            />\r\n            <label for=\"country\">Country:</label>\r\n            <input\r\n              [(ngModel)]=\"member.country\"\r\n              type=\"text\"\r\n              name=\"country\"\r\n              class=\"form-control mx-2\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </tab>\r\n      <tab heading=\"Edit Photos\">\r\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n      </tab>\r\n    </tabset>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanDeactivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\r\n  constructor(private confirmService: ConfirmService) {}\r\n\r\n  canDeactivate(component: MemberEditComponent): Observable<boolean> | boolean {\r\n    if (component.editForm.dirty) {\r\n      return this.confirmService.confirm();\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  title: string;\n  message: string;\n  btnOkText: string;\n  btnCancelText: string;\n  result: boolean;\n\n  constructor(public bsModalRef: BsModalRef) {}\n\n  ngOnInit(): void {}\n\n  confirm() {\n    this.result = true;\n    this.bsModalRef.hide();\n  }\n\n  decline() {\n    this.result = false;\n    this.bsModalRef.hide();\n  }\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">{{ title }}</h4>\n</div>\n<div class=\"modal-body\">\n  <p>{{ message }}</p>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">\n    {{ btnOkText }}\n  </button>\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">\n    {{ btnCancelText }}\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDetailedResolver } from './_resolvers/member-detailed.resolvers';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'members', component: MemberListComponent},\r\n      { path: 'members/:username', component: MemberDetailComponent, resolve: {member: MemberDetailedResolver} },\r\n      { path: 'member/edit', component: MemberEditComponent, canDeactivate: [PreventUnsavedChangesGuard] },\r\n      { path: 'lists', component: ListsComponent },\r\n      { path: 'messages', component: MessagesComponent },\r\n      { path: 'admin', component: AdminPanelComponent, canActivate: [AdminGuard] },\r\n    ]\r\n  },\r\n  { path: 'errors', component: TestErrorsComponent},\r\n  { path: 'not-found', component: NotFoundComponent},\r\n  { path: 'server-error', component: ServerErrorComponent},\r\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable } from 'rxjs';\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConfirmService {\n  bsModalRef: BsModalRef;\n\n  constructor(private modalService: BsModalService) {}\n\n  confirm(\n    title = 'Confirmation',\n    message = 'Are you sure you want to do this?',\n    btnOkText = 'Ok',\n    btnCancelText = 'Cancel'\n  ): Observable<boolean> {\n    const config = {\n      initialState: {\n        title,\n        message,\n        btnOkText,\n        btnCancelText,\n      },\n    };\n    \n    this.bsModalRef = this.modalService.show(ConfirmDialogComponent, config);\n\n    return new Observable<boolean>(this.getResult());\n  }\n  private getResult() {\n    return (observer) => {\n      const subscription = this.bsModalRef.onHidden.subscribe(() => {\n        observer.next(this.bsModalRef.content.result);\n        observer.complete();\n      });\n      return {\n        unsubscribe() {\n          subscription.unsubscribe();\n        },\n      };\n    };\n  }\n}\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css']\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n  @Input() updateSelectedRoles = new EventEmitter();\r\n  user: User;\r\n  roles: any[];\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  updateRoles() {\r\n    this.updateSelectedRoles.emit(this.roles);\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">Edit roles for {{ user.username }}</h4>\r\n  <button\r\n    type=\"button\"\r\n    class=\"close pull-right\"\r\n    aria-label=\"Close\"\r\n    (click)=\"bsModalRef.hide()\"\r\n  >\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <form #rolesForm id=\"rolesForm\" class=\"pl-3\">\r\n    <div class=\"form-check\" *ngFor=\"let role of roles\">\r\n      <input\r\n        type=\"checkbox\"\r\n        class=\"form-check-input\"\r\n        [checked]=\"role.checked\"\r\n        (change)=\"role.checked = !role.checked\"\r\n        [disabled]=\"role.name === 'Admin' && user.username ==='admin' \" \r\n      />\r\n      <label>{{role.name}}</label>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">\r\n    Cancel\r\n  </button>\r\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">\r\n    Submit\r\n  </button>\r\n</div>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}